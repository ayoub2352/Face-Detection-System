services:
  zookeeper:
    image: library/zookeeper:3.9.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=surveillance
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

#  spring-boot-app:
#    build: ./spring-boot-app
#    container_name: spring-boot-app
#    ports:
#      - "8085:8080"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/surveillance
#      - SPRING_DATASOURCE_USERNAME=root
#      - SPRING_DATASOURCE_PASSWORD=
#      - SPRING_DATASOURCE_DRIVER-CLASS-NAME=com.mysql.cj.jdbc.Driver
#      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect
#      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
#    depends_on:
#      - kafka
#      - mysql
#    networks:
#      - app-network

  python-app:
    build: ./python-app
    container_name: python-app
    volumes:
      - ./python-app/models:/app/models
      - ./dataset:/app/dataset
      - ./python-app:/app
      - ./jars:/app/jars
    environment:
      - PYSPARK_SUBMIT_ARGS=--master local[*] pyspark-shell
    depends_on:
      - kafka
    networks:
      - app-network


volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
